# 文件路径：/opt/hotShop/docker-compose.yml
version: '3.8'

services:
  # 数据库服务
  mysql:
    image: mysql:8.0
    container_name: hotShop-mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: hotShop
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "4306:3306"
    networks:
      - hotShop-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 5s
      timeout: 3s
      retries: 5

  # Redis服务
  redis:
    image: redis:alpine
    container_name: hotShop-redis
    ports:
      - "7379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hotShop-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5

  # RabbitMQ服务
  rabbitmq:
    image: rabbitmq:4.0.7-management-alpine
    container_name: hotShop-rabbitmq
    environment:
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    command:
      bash -c "
      set -e;  # 任何命令失败立即终止脚本
      if [ ! -f /plugins/rabbitmq_delayed_message_exchange-4.0.7.ez ]; then
      wget -q --tries=3 -O /plugins/rabbitmq_delayed_message_exchange-4.0.7.ez \
      https://github.com/rabbitmq/rabbitmq-delayed-message-exchange/releases/download/v4.0.7/rabbitmq_delayed_message_exchange-v4.0.7.ez;
      fi;
      rabbitmq-plugins enable --offline rabbitmq_delayed_message_exchange;
      rabbitmq-server
      "
    ports:
      - "6672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_plugins:/plugins
    networks:
      - hotShop-network
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5


  admin-service:
    build:
      context: .
      args:
        MODULE: admin
        PROFILE: ""
    container_name: hotShop-admin
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/hotShop
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 123456
      SPRING_REDIS_HOST: redis
      SERVER_PORT: 8088
    ports:
      - "8088:8088"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hotShop-network

  portal-service:
    build:
      context: .
      args:
        MODULE: portal
        PROFILE: ""
    container_name: hotShop-portal
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/hotShop
      SPRING_REDIS_HOST: redis
      SPRING_RABBITMQ_HOST: rabbitmq
      SERVER_PORT: 8080
    ports:
       - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - hotShop-network

  task-service:
    build:
      context: .
      args:
        MODULE: task
        PROFILE: ""
    container_name: hotShop-task
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/hotShop
      SPRING_REDIS_HOST: redis
      SPRING_RABBITMQ_HOST: rabbitmq
      SERVER_PORT: 8888
    ports:
      - "8888:8888"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - hotShop-network

volumes:
  mysql_data:
  redis_data:
  rabbitmq_data:
  rabbitmq_plugins:

networks:
  hotShop-network:
    driver: bridge