# 文件路径：/opt/hotShop/docker-compose.yml
version: '3.8'

services:
  # 数据库服务（共用）
  mysql:
    image: mysql:8.0
    container_name: hotShop-mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: hotShop
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "4306:3306"
    networks:
      - hotShop-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 5s
      timeout: 3s
      retries: 5

  # Redis服务（共用）
  redis:
    image: redis:alpine
    container_name: hotShop-redis
    ports:
      - "7379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hotShop-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5

  admin-service:
    build:
      context: .
      args:
        MODULE: admin
        PROFILE: ""
    container_name: hotShop-admin
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/hotShop
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 123456
      SPRING_REDIS_HOST: redis
      SERVER_PORT: 8088
    ports:
      - "8088:8088"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hotShop-network

  portal-service:
    build:
      context: .
      args:
        MODULE: portal
        PROFILE: ""
    container_name: hotShop-portal
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://hotShop-mysql:3306/hot_shop
      SPRING_REDIS_HOST: redis
      SERVER_PORT: 8080
    ports:
       - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hotShop-network

volumes:
  mysql_data:
  redis_data:

networks:
  hotShop-network:
    driver: bridge